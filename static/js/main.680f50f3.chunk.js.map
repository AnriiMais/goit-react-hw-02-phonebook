{"version":3,"sources":["components/Filter/Filter.module.scss","components/ContactForm/ContactForm.module.scss","components/ContactForm/ContactForm.jsx","components/Filter/Filter.jsx","components/ContactList/ContactList.jsx","components/App/App.jsx","index.js","components/ContactList/ContactList.module.scss"],"names":["module","exports","ContactForm","state","name","number","onSubmitContactForm","e","preventDefault","props","onSubmitForm","makeContact","setState","onFormInputChange","target","value","id","shortId","generate","genIdNumber","genIdName","this","className","s","contactForm","onSubmit","contactLabel","htmlFor","type","pattern","title","required","contactInput","onChange","addContactBtn","Component","Filter","filterQuery","genIdSearch","searchInputWrap","filterLabel","ContactList","queryList","onDeleteContact","contactList","map","contactWrap","contact","contactNumber","btnDelete","onClick","App","contacts","data","filter","onInputChange","addContacts","inputName","prev","every","alert","deleteContact","selectId","filterNormalized","filterContacts","toLowerCase","includes","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.680f50f3.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchInputWrap\":\"Filter_searchInputWrap__3W1Cx\",\"filterLabel\":\"Filter_filterLabel__3o9Ji\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactForm\":\"ContactForm_contactForm__2G4u-\",\"contactInput\":\"ContactForm_contactInput__3UANW\",\"addContactBtn\":\"ContactForm_addContactBtn__3uOGH\",\"contactLabel\":\"ContactForm_contactLabel__nH3_W\"};","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport shortId from 'shortid';\nimport s from './ContactForm.module.scss';\n\nclass ContactForm extends Component {\n  static propTypes = {\n    onSubmitForm: PropTypes.func.isRequired,\n  };\n  state = {\n    name: '',\n    number: '',\n  };\n\n  onSubmitContactForm = e => {\n    e.preventDefault();\n    this.props.onSubmitForm(this.makeContact());\n    this.setState({ name: '', number: '' });\n  };\n\n  onFormInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n\n  makeContact = () => {\n    const newContact = {\n      id: shortId.generate(),\n      name: this.state.name,\n      number: this.state.number,\n    };\n    return newContact;\n  };\n\n  render() {\n    const genIdNumber = shortId.generate();\n    const genIdName = shortId.generate();\n    const { name, number } = this.state;\n    //\n    return (\n      <form className={s.contactForm} onSubmit={this.onSubmitContactForm}>\n        <label className={s.contactLabel} htmlFor={genIdName}>\n          Name\n        </label>\n        <input\n          id={genIdName}\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Имя может состоять только из букв, апострофа, тире и пробелов. \n  Например Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan и т. п.\"\n          required\n          className={s.contactInput}\n          onChange={this.onFormInputChange}\n        />\n        <label className={s.contactLabel} htmlFor={genIdNumber}>\n          Number\n        </label>\n        <input\n          id={genIdNumber}\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Номер телефона должен состоять цифр и может содержать пробелы, тире, круглые скобки и может начинаться с +\"\n          required\n          className={s.contactInput}\n          onChange={this.onFormInputChange}\n        />\n        <button className={s.addContactBtn} type=\"submit\">\n          Add contact\n        </button>\n      </form>\n    );\n  }\n}\nexport default ContactForm;\n","import PropTypes from 'prop-types';\nimport shortId from 'shortid';\nimport s from './Filter.module.scss';\n\nconst Filter = ({ value, filterQuery }) => {\n  const genIdSearch = shortId.generate();\n  return (\n    <span className={s.searchInputWrap}>\n      <label className={s.filterLabel} htmlFor={genIdSearch}>\n        Find contacts by name\n      </label>\n      <input\n        type=\"text\"\n        name=\"filter\"\n        value={value}\n        id={genIdSearch}\n        onChange={filterQuery}\n      />\n    </span>\n  );\n};\nFilter.propTypes = {\n  value: PropTypes.string.isRequired,\n  filterQuery: PropTypes.func.isRequired,\n};\nexport default Filter;\n","import PropTypes from 'prop-types';\nimport s from './ContactList.module.scss';\n\nconst ContactList = ({ queryList, onDeleteContact }) => {\n  return (\n    <ul className={s.contactList}>\n      {queryList.map(({ id, name, number }) => (\n        <div className={s.contactWrap} key={id}>\n          <li className={s.contact}>\n            {name}:<span className={s.contactNumber}>{number}</span>\n          </li>\n          <button\n            className={s.btnDelete}\n            type=\"button\"\n            onClick={() => onDeleteContact(id)}\n          >\n            Delete\n          </button>\n        </div>\n      ))}\n    </ul>\n  );\n};\nContactList.propTypes = {\n  queryList: PropTypes.arrayOf(\n    PropTypes.objectOf(PropTypes.string.isRequired).isRequired,\n  ).isRequired,\n};\nexport default ContactList;\n","import React, { Component } from 'react';\nimport './App.scss';\nimport data from '../../data.json';\nimport ContactForm from '../ContactForm';\nimport Filter from '../Filter';\nimport ContactList from '../ContactList';\n\nclass App extends Component {\n  state = {\n    contacts: data,\n    filter: '',\n  };\n  onInputChange = e => {\n    const { name, value } = e.target;\n    this.setState({ [name]: value });\n  };\n  addContacts = contact => {\n    const inputName = contact.name;\n    this.setState(prev => {\n      if (prev.contacts.every(contact => contact.name !== inputName)) {\n        return {\n          contacts: [contact, ...prev.contacts],\n        };\n      } else alert(`${inputName} is already in contacts!!!`);\n    });\n  };\n  deleteContact = selectId => {\n    this.setState(prev => ({\n      contacts: prev.contacts.filter(contact => contact.id !== selectId),\n    }));\n  };\n\n  render() {\n    const { contacts, filter } = this.state;\n    const filterNormalized = filter;\n    const filterContacts = contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filterNormalized),\n    );\n    return (\n      <section className=\"App\">\n        <h1>Phonebook</h1>\n        <ContactForm onSubmitForm={this.addContacts} />\n        <h2 className=\"contacts\">Contacts</h2>\n        <Filter value={filter} filterQuery={this.onInputChange} />\n        <ContactList\n          queryList={filterContacts}\n          onDeleteContact={this.deleteContact}\n        />\n      </section>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './components/App/App.jsx';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"contactList\":\"ContactList_contactList__1C3At\",\"contactWrap\":\"ContactList_contactWrap__1_HUa\",\"contact\":\"ContactList_contact__1lCk6\",\"contactNumber\":\"ContactList_contactNumber__1pwuk\",\"btnDelete\":\"ContactList_btnDelete__3kt3J\"};"],"sourceRoot":""}